{"ast":null,"code":"// Redux 담당\n// Redux를 써야 하는 이유\n// 중앙 데이터 저장소 역할 , 컴포넌트가 필요로 할때 부분적으로 지원 ( React에서는 Context API 가 담당 )\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) // 배포용 미들웨어\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용 미들웨어 (히스토리가 쌓임 => 보안에 취약할 수 있기 때문에 개발용에만 장착)\n\n  const store = createStore(reducer, enhancer);\n  return store;\n}; // 기본적인 셋팅\n\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAK;AACxB,QAAMC,WAAW,GAAE,EAAnB;AACA,QAAMC,QAAQ,GAAG,QACfN,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADQ,CAC0B;AAD1B,IAEXH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFzB,CAFwB,CAImC;;AAC3D,QAAME,KAAK,GAAGN,WAAW,CAACE,OAAD,EAASG,QAAT,CAAzB;AACA,SAAOC,KAAP;AACH,CAPD,C,CASA;;;AACA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAAEK,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["// Redux 담당\r\n// Redux를 써야 하는 이유\r\n// 중앙 데이터 저장소 역할 , 컴포넌트가 필요로 할때 부분적으로 지원 ( React에서는 Context API 가 담당 )\r\n\r\nimport {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () =>{\r\n    const middlewares =[]\r\n    const enhancer = process.env.NODE_ENV ==='production'\r\n    ? compose(applyMiddleware(...middlewares)) // 배포용 미들웨어\r\n        : composeWithDevTools(applyMiddleware(...middlewares)) //개발용 미들웨어 (히스토리가 쌓임 => 보안에 취약할 수 있기 때문에 개발용에만 장착)\r\n    const store = createStore(reducer,enhancer);\r\n    return store;\r\n};\r\n\r\n// 기본적인 셋팅\r\nconst wrapper = createWrapper(configureStore, { debug : process.env.NODE_ENV === 'development',});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}