{"ast":null,"code":"import axios from \"axios\";\nimport { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    //const result= yield call(addPostAPI,action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS // data : result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    //const result= yield call(addCommentAPI,action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS // data : result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/sagas/post.js"],"names":["axios","delay","put","takeLatest","all","fork","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","data","post","addPost","action","type","err","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,GAAf,EAAoBC,UAApB,EAA+BC,GAA/B,EAAmCC,IAAnC,QAA8C,oBAA9C;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,gBALJ,EAMIC,gBANJ,QAOO,kBAPP;;AASA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOb,KAAK,CAACc,IAAN,CAAW,WAAX,EAAuBD,IAAvB,CAAP;AACH;;AAGD,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAI;AACA;AACA,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAGN,gBADD,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOC,OAAMO,GAAN,EAAU;AACP,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAGR,gBADD;AAENI,MAAAA,IAAI,EAAGK,GAAG,CAACC,QAAJ,CAAaN;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASO,aAAT,CAAuBP,IAAvB,EAA4B;AACxB,SAAOb,KAAK,CAACc,IAAN,CAAY,aAAYD,IAAI,CAACQ,MAAO,UAApC,EAA8CR,IAA9C,CAAP;AACH;;AAGD,UAAUS,UAAV,CAAqBN,MAArB,EAA4B;AACxB,MAAI;AACA;AACA,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAGT,mBADD,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOC,OAAMU,GAAN,EAAU;AACP,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAGX,mBADD;AAENO,MAAAA,IAAI,EAAGK,GAAG,CAACC,QAAJ,CAAaN;AAFd,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUU,YAAV,GAAwB;AACpB,QAAMpB,UAAU,CAACO,gBAAD,EAAkBK,OAAlB,CAAhB;AACH;;AAED,UAAUS,eAAV,GAA2B;AACvB,QAAMrB,UAAU,CAACI,mBAAD,EAAqBe,UAArB,CAAhB;AACH;;AAGD,eAAe,UAAUG,QAAV,GAAoB;AAC/B,QAAMrB,GAAG,CAAC,CACNC,IAAI,CAACkB,YAAD,CADE,EAENlB,IAAI,CAACmB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from \"axios\";\r\nimport {delay, put, takeLatest,all,fork} from \"redux-saga/effects\";\r\nimport {\r\n    ADD_COMMENT_FAILURE,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE,\r\n    ADD_POST_REQUEST,\r\n    ADD_POST_SUCCESS\r\n} from \"../reducers/post\";\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('/api/post',data);\r\n}\r\n\r\n\r\nfunction* addPost(action){\r\n    try {\r\n        //const result= yield call(addPostAPI,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : ADD_POST_SUCCESS,\r\n            // data : result.data,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type : ADD_POST_FAILURE,\r\n            data : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data){\r\n    return axios.post(`/api/post/${data.postId}/comment`,data);\r\n}\r\n\r\n\r\nfunction* addComment(action){\r\n    try {\r\n        //const result= yield call(addCommentAPI,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : ADD_COMMENT_SUCCESS,\r\n            // data : result.data,\r\n        });\r\n    }catch(err){\r\n        yield put({\r\n            type : ADD_COMMENT_FAILURE,\r\n            data : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}