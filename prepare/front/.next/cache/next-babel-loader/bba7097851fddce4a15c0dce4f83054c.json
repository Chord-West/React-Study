{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\WEB-Study\\\\React-Study\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Comment, Popover, Button, Avatar, List } from \"antd\";\nimport { HeartOutlined, RetweetOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // Optional Chaining연산자 me.id 가 있으면 그 값이고 , 없으면 undefined로 바꿔줌\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    }); // true인걸 false로 false인걸 true로 바꿔줌\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 40\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"commnet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 32\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 32\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 43\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 31\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 27\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(PostCard, \"uXsLp1VysANRmM+QoPHUqmVPers=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","Card","Comment","Popover","Button","Avatar","List","HeartOutlined","RetweetOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useSelector","PostImages","CommentForm","PostCardContent","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React,{useState,useCallback} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Card, Comment, Popover, Button, Avatar,List} from \"antd\";\r\nimport {HeartOutlined,RetweetOutlined,MessageOutlined,EllipsisOutlined,HeartTwoTone} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\n\r\nconst PostCard = ({post}) =>{\r\n    const id = useSelector((state)=>state.user.me?.id);// Optional Chaining연산자 me.id 가 있으면 그 값이고 , 없으면 undefined로 바꿔줌\r\n    const [liked,setLiked] = useState(false);\r\n    const [commentFormOpened,setCommentFormOpened] = useState(false);\r\n    const onToggleLike = useCallback(()=>{\r\n        setLiked((prev)=>!prev); // true인걸 false로 false인걸 true로 바꿔줌\r\n    },[]);\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentFormOpened((prev)=>!prev);\r\n    },[]);\r\n    return(\r\n      <div style={{marginBottom : 20}}>\r\n          {/*배열안에 js를 넣어줄때는 key를 꼭 넣어줘야함*/}\r\n          <Card\r\n              cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n              actions={[\r\n                  <RetweetOutlined key=\"retweet\"/>,\r\n                  liked\r\n                      ?<HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\r\n                      :<HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                  <MessageOutlined key=\"commnet\" onClick={onToggleComment}/>,\r\n                  <Popover key=\"more\" content={(\r\n                      <Button.Group>\r\n                          {id && post.User.id === id ? (\r\n                              <>\r\n                                <Button>수정</Button>\r\n                                <Button type=\"danger\">삭제</Button>\r\n                              </>\r\n                          ) :  <Button>신고</Button>}\r\n                      </Button.Group>\r\n                  )}>\r\n                      <EllipsisOutlined/>\r\n                  </Popover>,\r\n              ]}\r\n          >\r\n              <Card.Meta\r\n                  avatar = {<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                  title = {post.User.nickname}\r\n                  description={<PostCardContent postData={post.content}/>}\r\n              />\r\n          </Card>\r\n          {commentFormOpened&&(\r\n              <div>\r\n                  <CommentForm post={post}/>\r\n                  <List\r\n                      header={`${post.Comments.length}개의 댓글`}\r\n                      itemLayout=\"horizontal\"\r\n                      dataSource={post.Comments}\r\n                      renderItem={(item)=>(\r\n                          <li>\r\n                              <Comment\r\n                                  author={item.User.nickname}\r\n                                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                  content={item.content}\r\n                              />\r\n                          </li>\r\n                      )}\r\n                  />\r\n              </div>\r\n          )}\r\n          {/*<CommentForm/>*/}\r\n          {/*<Comments/>*/}\r\n      </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post : PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content : PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments : PropTypes.arrayOf(PropTypes.object),\r\n        Images : PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}