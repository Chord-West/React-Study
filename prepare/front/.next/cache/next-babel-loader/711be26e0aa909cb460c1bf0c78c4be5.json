{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글 #해쉬태크 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://i.imgur.com/Bf97WeF.png'\n    }, {\n      id: shortId.generate(),\n      src: 'https://i.imgur.com/Bf97WeF.png'\n    }, {\n      id: shortId.generate(),\n      src: 'https://i.imgur.com/Bf97WeF.png'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      comment: '우와 개정판이 나왔군요'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      comment: '얼른 사고싶어요'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        // 앞에 추가해야 게시글 쓰면 가장 위에 올라감\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      var postIndex = state.mainPosts.findIndex(function (v) {\n        return v.id === action.data.postId;\n      });\n\n      var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n      post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n      var mainPosts = _toConsumableArray(state.mainPosts);\n\n      mainPosts[postIndex] = post;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: mainPosts,\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","comment","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initialState = {\r\n    mainPosts : [{\r\n        id : 1,\r\n        User :{\r\n            id:1,\r\n            nickname : '제로초',\r\n        },\r\n        content :'첫 번째 게시글 #해쉬태크 #익스프레스',\r\n        Images : [{\r\n            id: shortId.generate(),\r\n            src:'https://i.imgur.com/Bf97WeF.png',\r\n        }, {\r\n            id: shortId.generate(),\r\n            src:'https://i.imgur.com/Bf97WeF.png',\r\n        }, {\r\n            id: shortId.generate(),\r\n            src:'https://i.imgur.com/Bf97WeF.png',\r\n        }],\r\n        Comments:[{\r\n            id: shortId.generate(),\r\n            User:{\r\n                id: shortId.generate(),\r\n                nickname: 'nero',\r\n            },\r\n            comment:'우와 개정판이 나왔군요',\r\n        }, {\r\n            id: shortId.generate(),\r\n            User:{\r\n                id: shortId.generate(),\r\n                nickname: 'hero',\r\n            },\r\n            comment: '얼른 사고싶어요',\r\n        }],\r\n    }],\r\n    imagePaths:[],\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    removePostLoading:false,\r\n    removePostDone:false,\r\n    removePostError:null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\nexport const addComment = (data) => ({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content : data.content,\r\n    User :{\r\n        id:1,\r\n        nickname:'제로초',\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n    id:shortId.generate(),\r\n    content : data,\r\n    User :{\r\n        id:1,\r\n        nickname:'제로초',\r\n    },\r\n\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone: false,\r\n                addPostError: null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts], // 앞에 추가해야 게시글 쓰면 가장 위에 올라감\r\n                addPostLoading: false,\r\n                addPostDone: true,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostError: action.error,\r\n            };\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: true,\r\n                addCommentDone: false,\r\n                addCommentError: null,\r\n            };\r\n        case ADD_COMMENT_SUCCESS:\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = { ...state.mainPosts[postIndex] };\r\n            post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = post;\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                addCommentLoading: false,\r\n                addCommentDone: true,\r\n            };\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: false,\r\n                addCommentError: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}