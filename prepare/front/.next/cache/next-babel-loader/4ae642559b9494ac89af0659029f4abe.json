{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from '/post';\nconst initialState = {\n  user: {},\n  post: {}\n}; // (이전상태, 액션 ) => 다음상태\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      // 초기화할때 없으면 undefined가 됨\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/reducers/index.js"],"names":["HYDRATE","user","post","initialState","rootReducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,OAAjB;AAEA,MAAMC,YAAY,GAAE;AAChBF,EAAAA,IAAI,EAAC,EADW;AAGhBC,EAAAA,IAAI,EAAG;AAHS,CAApB,C,CAOA;;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAEF,YAAR,EAAqBG,MAArB,KAA+B;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,MAAtB;AACA,6CAAWD,KAAX,GAAoBC,MAAM,CAACI,OAA3B;;AAEJ;AAAU;AACN,aAAOL,KAAP;AANR;AAQH,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import {HYDRATE} from \"next-redux-wrapper\";\r\nimport user from './user';\r\nimport post from '/post';\r\n\r\nconst initialState ={\r\n    user:{\r\n    },\r\n    post : {\r\n    }\r\n}\r\n\r\n// (이전상태, 액션 ) => 다음상태\r\nconst rootReducer = (state= initialState,action) =>{\r\n    switch (action.type){\r\n        case HYDRATE:\r\n            console.log('HYDRATE',action)\r\n            return {...state,...action.payload};\r\n\r\n        default : // 초기화할때 없으면 undefined가 됨\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}