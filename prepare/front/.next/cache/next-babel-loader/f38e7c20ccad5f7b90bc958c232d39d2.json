{"ast":null,"code":"import axios from 'axios';\nimport { delay, put, takeLatest, all, fork } from 'redux-saga/effects';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport shortId from 'shortid';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result= yield call(addPostAPI,action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result= yield call(removePostAPI,action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result= yield call(addCommentAPI,action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/sagas/post.js"],"names":["axios","delay","put","takeLatest","all","fork","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","shortId","addPostAPI","data","post","addPost","action","id","generate","type","content","err","response","removePostAPI","delete","removePost","addCommentAPI","postId","addComment","watchAddPost","watchRemovePost","REMOVE_POST_REQUEST","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { delay, put, takeLatest, all, fork } from 'redux-saga/effects';\r\nimport {\r\n    ADD_COMMENT_FAILURE,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE,\r\n    ADD_POST_REQUEST,\r\n    ADD_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS,\r\n} from '../reducers/post';\r\nimport {ADD_POST_TO_ME, REMOVE_POST_OF_ME} from \"../reducers/user\";\r\nimport shortId from 'shortid';\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result= yield call(addPostAPI,action.data);\r\n        yield delay(1000);\r\n        const id = shortId.generate();\r\n        yield put({\r\n            type : ADD_POST_SUCCESS,\r\n            data : {\r\n                id,\r\n                content: action.data,\r\n            },\r\n        });\r\n        yield put({\r\n           type : ADD_POST_TO_ME,\r\n           data : id,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : ADD_POST_FAILURE,\r\n            data : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete('/api/post', data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n        // const result= yield call(removePostAPI,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : REMOVE_POST_SUCCESS,\r\n            data : action.data,\r\n        });\r\n        yield put({\r\n            type : REMOVE_POST_OF_ME,\r\n            data : action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : REMOVE_POST_FAILURE,\r\n            data : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        // const result= yield call(addCommentAPI,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : ADD_COMMENT_SUCCESS,\r\n            data : action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : ADD_COMMENT_FAILURE,\r\n            data : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}