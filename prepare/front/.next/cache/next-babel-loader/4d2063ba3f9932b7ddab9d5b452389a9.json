{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\WEB-Study\\\\React-Study\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Image, Popover, Button, Avatar } from \"antd\";\nimport { HeartOutlined, RetweetOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // Optional Chaining연산자 me.id 가 있으면 그 값이고 , 없으면 undefined로 바꿔줌\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev); // true인걸 false로 false인걸 true로 바꿔줌\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 40\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"commnet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB313\\uAE00\\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","Card","Image","Popover","Button","Avatar","HeartOutlined","RetweetOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useSelector","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React,{useState,useCallback} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Card, Image, Popover, Button, Avatar} from \"antd\";\r\nimport {HeartOutlined,RetweetOutlined,MessageOutlined,EllipsisOutlined,HeartTwoTone} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({post}) =>{\r\n    const id = useSelector((state)=>state.user.me?.id);// Optional Chaining연산자 me.id 가 있으면 그 값이고 , 없으면 undefined로 바꿔줌\r\n    const [liked,setLiked] = useState(false);\r\n    const [commentFormOpened,setCommentFormOpened] = useState(false);\r\n    const onToggleLike = useCallback(()=>{\r\n        setLiked((prev)=>!prev); // true인걸 false로 false인걸 true로 바꿔줌\r\n    },[]);\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentFormOpened((prev)=>!prev);\r\n    },[]);\r\n    return(\r\n      <div style={{marginBottom : 20}}>\r\n          {/*배열안에 js를 넣어줄때는 key를 꼭 넣어줘야함*/}\r\n          <Card\r\n              cover={post.Images[0] && <PostImages images={post.images}/>}\r\n              actions={[\r\n                  <RetweetOutlined key=\"retweet\"/>,\r\n                  liked\r\n                      ?<HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\r\n                      :<HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                  <MessageOutlined key=\"commnet\" onClick={onToggleComment}/>,\r\n                  <Popover key=\"more\" content={(\r\n                      <Button.Group>\r\n                          {id && post.User.id === id ? (\r\n                              <>\r\n                                <Button>수정</Button>\r\n                                <Button type=\"danger\">삭제</Button>\r\n                              </>\r\n                          ) :  <Button>신고</Button>}\r\n                      </Button.Group>\r\n                  )}>\r\n                      <EllipsisOutlined/>\r\n                  </Popover>,\r\n              ]}\r\n          >\r\n              <Card.Meta\r\n                  avatar = {<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                  title = {post.User.nickname}\r\n                  description={post.content}\r\n              />\r\n          </Card>\r\n          {commentFormOpened&&(\r\n              <div>\r\n                  댓글부분\r\n              </div>\r\n          )}\r\n          {/*<CommentForm/>*/}\r\n          {/*<Comments/>*/}\r\n      </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post : PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content : PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments : PropTypes.arrayOf(PropTypes.object),\r\n        Images : PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}