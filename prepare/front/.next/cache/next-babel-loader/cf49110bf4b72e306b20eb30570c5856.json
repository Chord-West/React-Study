{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\WEB-Study\\\\React-Study\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react/cjs/react.production.min';\nimport { addPost } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef(); // useRef는 실제 돔에 접근할 때 사용\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click(); // 버튼을 눌러서 사진 업로드 창을 띄움\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placehoder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(PostForm, \"BbP58L3DmgcyrfARV/2rph/fdjs=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","Form","Input","Button","useDispatch","useSelector","useEffect","addPost","useInput","PostForm","state","post","imagePaths","addPostDone","dispatch","imageInput","text","onChangeText","setText","onSubmit","onClickImageUpload","current","click","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react/cjs/react.production.min';\r\nimport { addPost } from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef(); // useRef는 실제 돔에 접근할 때 사용\r\n    const [text, onChangeText, setText] = useInput('');\r\n\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost(text));\r\n    }, [text]);\r\n    useEffect(() => {\r\n        if (addPostDone) {\r\n            setText('');\r\n        }\r\n    }, [addPostDone]);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click(); // 버튼을 눌러서 사진 업로드 창을 띄움\r\n    }, [imageInput.current]);\r\n    return (\r\n      <Form style={{ margin:'10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n        <Input.TextArea\r\n          value={text}\r\n          onChange={onChangeText}\r\n          maxLength={140}\r\n          placehoder=\"어떤 신기한 일이 있었나요?\"\r\n        />\r\n        <div>\r\n          <input type=\"file\" multiple hidden ref={imageInput} />\r\n          <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n          <Button type=\"primary\" style={{ float:'right' }} htmlType=\"submit\">짹짹</Button>\r\n        </div>\r\n        <div>\r\n          {imagePaths.map((v) => (\r\n            <div key={v} style={{ display:'inline-block' }}>\r\n              <img src={v} style={{ width:'200px' }} alt={v} />\r\n              <div>\r\n                <Button>제거</Button>\r\n              </div>\r\n            </div>\r\n              ))}\r\n        </div>\r\n      </Form>\r\n    );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}