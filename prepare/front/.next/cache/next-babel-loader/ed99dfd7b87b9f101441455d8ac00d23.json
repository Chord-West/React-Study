{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nconst LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      console.log(\"ReducerLogin\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'hyeonSeo'\n        })\n      });\n\n    case 'LOG_IN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/WEB-Study/React-Study/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","console","log","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAE;AACvBC,EAAAA,WAAW,EAAG,KADS;AACF;AACrBC,EAAAA,UAAU,EAAG,KAFU;AAGvBC,EAAAA,YAAY,EAAG,KAHQ;AAGD;AACtBC,EAAAA,EAAE,EAAG,IAJkB;AAKvBC,EAAAA,UAAU,EAAC,EALY;AAMvBC,EAAAA,SAAS,EAAC;AANa,CAApB;AASP,MAAMC,cAAc,GAAC,gBAArB;AACA,MAAMC,cAAc,GAAC,gBAArB;AACA,MAAMC,cAAc,GAAC,gBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAS;AACvC,SAAM;AACFC,IAAAA,IAAI,EAAE,gBADJ;AAEFD,IAAAA;AAFE,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAK;AACpC,SAAM;AACFD,IAAAA,IAAI,EAAE;AADJ,GAAN;AAGH,CAJM;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGf,YAAT,EAAsBgB,MAAtB,KAAgC;AAC5C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,gBAAL;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,6CACOH,KADP;AAEId,QAAAA,WAAW,EAAG;AAFlB;;AAIJ,SAAK,gBAAL;AACI,6CACOc,KADP;AAEId,QAAAA,WAAW,EAAG,KAFlB;AAGIC,QAAAA,UAAU,EAAG,IAHjB;AAIIE,QAAAA,EAAE,kCAAOY,MAAM,CAACL,IAAd;AAAmBQ,UAAAA,QAAQ,EAAC;AAA5B;AAJN;;AAMJ,SAAK,gBAAL;AACI,6CACOJ,KADP;AAEId,QAAAA,WAAW,EAAG,KAFlB;AAGIC,QAAAA,UAAU,EAAG;AAHjB;;AAKJ,SAAK,iBAAL;AACI,6CACOa,KADP;AAEIZ,QAAAA,YAAY,EAAG;AAFnB;;AAIJ,SAAK,iBAAL;AACI,6CACOY,KADP;AAEIZ,QAAAA,YAAY,EAAG,KAFnB;AAGID,QAAAA,UAAU,EAAG,KAHjB;AAIIE,QAAAA,EAAE,EAAG;AAJT;;AAMJ,SAAK,iBAAL;AACI,6CACOW,KADP;AAEIZ,QAAAA,YAAY,EAAG,KAFnB;AAGID,QAAAA,UAAU,EAAG;AAHjB;;AAKJ;AACI,aAAOa,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["export const initialState ={\r\n    isLoggingIn : false, // 로그인 시도중\r\n    isLoggedIn : false,\r\n    isLoggingOut : false, // 로그아웃 시도중\r\n    me : null,\r\n    signUpData:{},\r\n    loginData:{},\r\n}\r\n\r\nconst LOG_IN_REQUEST='LOG_IN_REQUEST';\r\nconst LOG_IN_SUCCESS='LOG_IN_SUCCESS';\r\nconst LOG_IN_FAILURE='LOG_IN_FAILURE';\r\n\r\nexport const loginRequestAction = (data) =>{\r\n    return{\r\n        type: 'LOG_IN_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutRequestAction = () =>{\r\n    return{\r\n        type: 'LOG_OUT_REQUEST',\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState,action) =>{\r\n    switch (action.type){\r\n        case 'LOG_IN_REQUEST':\r\n            console.log(\"ReducerLogin\")\r\n            return{\r\n                ...state,\r\n                isLoggingIn : true,\r\n            };\r\n        case 'LOG_IN_SUCCESS':\r\n            return{\r\n                ...state,\r\n                isLoggingIn : false,\r\n                isLoggedIn : true,\r\n                me : {...action.data,nickname:'hyeonSeo'},\r\n            };\r\n        case 'LOG_IN_FAILURE':\r\n            return{\r\n                ...state,\r\n                isLoggingIn : false,\r\n                isLoggedIn : false,\r\n            };\r\n        case 'LOG_OUT_REQUEST':\r\n            return{\r\n                ...state,\r\n                isLoggingOut : true,\r\n            };\r\n        case 'LOG_OUT_SUCCESS':\r\n            return{\r\n                ...state,\r\n                isLoggingOut : false,\r\n                isLoggedIn : false,\r\n                me : null,\r\n            };\r\n        case 'LOG_OUT_FAILURE':\r\n            return{\r\n                ...state,\r\n                isLoggingOut : false,\r\n                isLoggedIn : false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}